# -- coding:utf-8 --# 房子有户型，总面积和家具列表# 新房子没有任何家具# 家具有名字和占地面积# 将三件家具添加到房子中# 打印房子，输出信息class House:    def __init__(self, house_type, area):        self.house_type = house_type        self.area = area        self.free_area = area        self.house_item = []    def __str__(self):        return ('户型 %s\n总面积: %.2f\n[剩余%.2f]\n家具: %s'                %(self.house_type, self.area,                  self.free_area, self.house_item))    def add_item(self, item):        print('要添加 %s' % item)        if item.area > self.free_area:            print('area full')            return        self.house_item.append(item.name)        self.free_area -= item.areaclass HouseItem:    def __init__(self, name, area):        self.name = name        self.area = area    def __str__(self):        return '[%s] 占地 %.2f' % (self.name, self.area)# 创建家具bed = HouseItem('席梦思', 4)chest = HouseItem('衣柜', 2)table = HouseItem('餐桌', 400)# 创建房子对象my_house = House("两室一厅", 60)print(my_house)my_house.add_item(bed)print(my_house)my_house.add_item(chest)print(my_house)my_house.add_item(table)print(my_house)# 如果代码太长，加（）， 然后回车# 如果代码太长，加（）， 然后回车# 如果代码太长， 加（）， 然后回车