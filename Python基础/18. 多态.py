# 多态# 不同的子类对象调用相同的父类方法## 如果没有确定的父类，都是继承object方法class Dog(object):    def __init__(self, name):        self.name = name    def game(self):        print('%s just play' % self.name)class FlyDog(Dog):    def game(self):        print('%s fly sky to play' % self.name)class Person(object):    def __init__(self, name):        self.name = name    def game_with_dog(self, dog):        print('%s and %s together with' % (self.name, dog.name))        dog.game()cai = FlyDog("wangcai")ming = Person('xiaoming')ming.game_with_dog(cai)